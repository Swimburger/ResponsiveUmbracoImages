@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web.Models
@using System.Text
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    var image = Umbraco.Media(Model.GetParameterValue<string>("image")) as ContentModels.Image;

    var defaultWidth = Model.GetParameterValue<int>("imageDisplayWidth", -1);
    var defaultWidthTablet = Model.GetParameterValue<int>("imageDisplayWidthTablet", -1);
    var defaultWidthPhone = Model.GetParameterValue<int>("imageDisplayWidthPhone", -1);

    var alt = Model.GetParameterValue<string>("alt");
    alt = alt == null ? string.Empty : string.Format("alt=\"{0}\"", alt);
}
<picture>
    @RenderSource(image, defaultWidthPhone, "(max-width: 425px)")
    @RenderSource(image, defaultWidthTablet, "(max-width: 768px)")
    @RenderSource(image, defaultWidth)
    <img src="@image.Url" @Html.Raw(alt) />
</picture>

@helper RenderSource(ContentModels.Image image, int displayWidth, string mediaQuery = null)
{
    int nativeWidth = image.Value<int>("umbracoWidth");
    mediaQuery = mediaQuery == null ? string.Empty : string.Format("media=\"{0}\"", mediaQuery);
    if (displayWidth > 0)
    {
        StringBuilder srcSetBuilder = new StringBuilder();
        StringBuilder srcSetWebpBuilder = new StringBuilder();
        srcSetBuilder.AppendFormat("{0} 1x", image.Url.GetCropUrl(width: displayWidth));
        srcSetWebpBuilder.AppendFormat("{0} 1x", image.Url.GetCropUrl(width: displayWidth, furtherOptions: "&format=webp&quality=90"));

        int widthx1point5 = Convert.ToInt32(Math.Truncate(displayWidth * 1.5));
        if (widthx1point5 <= nativeWidth)
        {
            srcSetBuilder.AppendFormat(",{0} 1.5x", image.Url.GetCropUrl(width: widthx1point5));
            srcSetWebpBuilder.AppendFormat(",{0} 1.5x", image.Url.GetCropUrl(width: widthx1point5, furtherOptions: "&format=webp&quality=90"));
        }

        int widthx2 = (int)displayWidth * 2;
        if (widthx2 <= nativeWidth)
        {
            srcSetBuilder.AppendFormat(",{0} 2x", image.Url.GetCropUrl(width: widthx2));
            srcSetWebpBuilder.AppendFormat(",{0} 2x", image.Url.GetCropUrl(width: widthx2, furtherOptions: "&format=webp&quality=90"));
        }

        <source type="image/webp"
                srcset="@Html.Raw(srcSetWebpBuilder.ToString())"
                @Html.Raw(mediaQuery)
                sizes="@(displayWidth)px" />
        <source srcset="@Html.Raw(srcSetBuilder.ToString())"
                @Html.Raw(mediaQuery)
                sizes="@(displayWidth)px" />
    }
}